package com.mnet.mobility.utilities;

import java.io.File;

import com.mnet.framework.core.FrameworkProperties;
import com.mnet.framework.core.MITETest;
import com.mnet.framework.reporting.FrameworkLog;
import com.mnet.mobility.utilities.MobilityUtilities.MobilityDeviceType;
import com.mnet.mobility.utilities.MobilityUtilities.MobilityOS;
import com.mnet.pojo.mobility.PatientAppIdentity;
import com.mnet.pojo.mobility.PatientAppKeys;
import com.mnet.pojo.mobility.PhoneData;

/**
 * Represents a simulated NGQ2.0 Patient App instance.
 * Create a new instance of this object when changing patient app instances.
 * 
 * @author Arya Biswas
 * @version Fall 2023
 */
public class NGQPatientApp extends PatientApp {
	
	/**
	 * Instantiates a new simulated NGQ2.0 patient app instance.
	 * Associated with a globaly unique UUID (azureId).
	 */
	public NGQPatientApp(MITETest currentTest, MobilityOS os) {
		super(currentTest, MobilityDeviceType.NGQ, os);
	}
	
	/**
	 * Represents an already existing NGQ2.0 patient app instance.
	 * @param patientAppKeys Patient app keys as generated by CSR request.
	 * @param patientAppIdentity Patient app identity as generated by validate call.
	 * @param phoneData Phone data associated with provisioning payload.
	 */
	public NGQPatientApp(MITETest currentTest, MobilityOS os,
			String azureId, String abbreviatedModelNum, String deviceSerial, String registrationCode,
			PatientAppKeys patientAppKeys, PatientAppIdentity patientAppIdentity, PhoneData phoneData) {
		super(currentTest, MobilityDeviceType.NGQ, os,
				azureId, abbreviatedModelNum, deviceSerial, registrationCode,
				patientAppKeys, patientAppIdentity, phoneData);
	}
	
	/**
	 * Represents an already existing NGQ2.0 patient app instance, derived from properties file.
	 * @param appProperties Name of properties file located in LOG_DIR generated using {@link MobilityUtilities#toPropertiesFile(FrameworkLog, PatientApp)}
	 */
	public NGQPatientApp(MITETest currentTest, String appProperties) {
		super(currentTest, MobilityDeviceType.NGQ, 
				MobilityOS.valueOf(
						FrameworkProperties.getProperty("OS", appProperties, FrameworkLog.LOG_DIR + File.separator).toUpperCase()),
				appProperties);
	}
			
}
